<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>My Stories Through Makers Academy </title><description>Blog of Harriet Craven</description><link>http://localhost:2368/</link><generator>Ghost 0.6</generator><lastBuildDate>Thu, 10 Sep 2015 19:30:24 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Duck Typing</title><description>&lt;p&gt;Research Project: What is duck typing? Give a code example to demonstrate why this is useful. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Duck typing is the process of making code more flexible and less tightly&lt;/p&gt;</description><link>http://localhost:2368/2015/09/10/duck-typing/</link><guid isPermaLink="false">076ca896-5dba-41e2-95fd-6213bd0626c5</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Thu, 10 Sep 2015 19:30:02 GMT</pubDate><content:encoded>&lt;p&gt;Research Project: What is duck typing? Give a code example to demonstrate why this is useful. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Duck typing is the process of making code more flexible and less tightly couples. It is commonly used in OO languages when you only want to know the default behaviour of an object, and are not concerned with the class to which it belongs. &lt;/p&gt;

&lt;p&gt;The main principle idea behind duck typing is to trust your objects and their interface. You only determine an object's suitability by the presence of certain methods.&lt;/p&gt;

&lt;p&gt;A real life example might make this more clear..&lt;/p&gt;

&lt;p&gt;If I ask for directions and get the correct answer, I do not care if that answer has come from a policeman or a teacher. All I care is that I have arrived at my destination. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Duck  
  def walk
    'Waddle'
  end

  def quack
    'Hello'
  end

  def name 
    @name
  end

  def name=(name)
    @name
  end
end

duck = Duck.new  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;class Imposter  
  def walk
    'Waddle'
  end

  def quack
    'Hello'
  end
end

imposter = Imposter.new
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the example about, ruby doesn't care that the class name is imposter, all it cares about is that this object accepts the messages from the methods 'walk' and 'quack'. For all we know this imposter could indeed be a duck. &lt;/p&gt;

&lt;p&gt;Research project by Harry and Matt-Paul&lt;/p&gt;</content:encoded></item><item><title>Day 7</title><description>&lt;p&gt;All I think I want to mention tonight is how really great my cohort is! We had a September group meeting with Dana, our chief joy officer, and we just went around everybody for a minute or so talking about our thoughts and feelings, what we are enjoying, what we&lt;/p&gt;</description><link>http://localhost:2368/2015/09/09/day-7/</link><guid isPermaLink="false">08fdcbec-a4c2-4f13-80a4-e505ccb123c4</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Wed, 09 Sep 2015 21:53:17 GMT</pubDate><content:encoded>&lt;p&gt;All I think I want to mention tonight is how really great my cohort is! We had a September group meeting with Dana, our chief joy officer, and we just went around everybody for a minute or so talking about our thoughts and feelings, what we are enjoying, what we expected, finding hard, small victories etc. There were loads of really funny comments and its crazy to think we have only known each other 7 days. This sounds really cliche but it actually feels like a massive family already! &lt;/p&gt;

&lt;p&gt;Don’t get me wrong.. it is HARD, totally exhausting and today was yet another emotional rollercoaster, but there is so much support around us all and its just such an amazing place to be 12 hours every day.  &lt;/p&gt;

&lt;p&gt;This photo was from day 1! Cant believe how much we have managed to cram into our heads since then!&lt;/p&gt;

&lt;p&gt;&lt;img src="https://scontent-lhr3-1.xx.fbcdn.net/hphotos-xlp1/t31.0-8/11958187_871575319602853_393757348614922222_o.jpg" alt=""&gt;
Sorry it is short tonight - I made a really poor attempt at a previous research project that needs serious tlc!&lt;/p&gt;

&lt;p&gt;Goodnight! &lt;br&gt;
Harry &lt;br&gt;
x&lt;/p&gt;</content:encoded></item><item><title>Composition vs Inheritance</title><description>&lt;p&gt;&lt;strong&gt;Research Assignment:&lt;/strong&gt; Describe the difference between composition and inheritance. What are some of the dangers of inheritance? Why would we prefer composition over inheritance? Give code examples of using inheritance to build ships.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Composition vs Inheritance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Inheritance is the relationship between two classes. It lets subclasses access all the features&lt;/p&gt;</description><link>http://localhost:2368/2015/09/09/post-post/</link><guid isPermaLink="false">2af9e87f-0216-4108-a0b3-9b99ca9e1e33</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Wed, 09 Sep 2015 10:33:35 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;Research Assignment:&lt;/strong&gt; Describe the difference between composition and inheritance. What are some of the dangers of inheritance? Why would we prefer composition over inheritance? Give code examples of using inheritance to build ships.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Composition vs Inheritance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Inheritance is the relationship between two classes. It lets subclasses access all the features of its superclass, and then add more on top of them which would overwrite the superclass’s inherited features. In Ruby, a class can only inherit from a single other class.&lt;/p&gt;

&lt;p&gt;The alternative to inheritance which essentially achieves the same thing is composition. This involves the usage of other classes and modules instead of simply relying on implicit inheritance. Composition is using instance variables or modules that reference other objects. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Why bother with inheritance?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While rarely used by programmers, inheritance does have the advantage of being able to appeal to DRY principles by reducing repeated code, making it look more succinct and readable.&lt;/p&gt;

&lt;p&gt;BUT..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dangers of inheritance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some disadvantages of inheritance is that you can’t change the implementation inherited from the super classes at run time. Inheritance also breaks the whole encapsulation concept. This is because a subclass is exposed to details of its superclass. Inheritance also creates LOADS of coupling, so any change in the superclass forces subclass to change, leading to potential errors. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Why prefer composition over inheritance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While inheritance perhaps makes code more succinct, it keeps the code rigid and less agile. Composition on the other hand offers the freedom of being able to package up code into different modules, allowing it to be used in a variety of contexts and settings. &lt;/p&gt;

&lt;p&gt;Since most coding projects should incorporate agile principles and be open to changes in situations, its a no brainer that composition principles should be adopted when considering how objects interact with one another.&lt;/p&gt;

&lt;p&gt;There may be times where inheritance is the way forward, but this is completely depending on the required design structure. Whichever you choose to use, composition or inheritance, the goal is to produce shorter, easier to read reusable code and adaptable, so you ultimately you choose which you think is most appropriate. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Inheritance example:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Ship  
  def initialize(size)
    @size = 2
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;class BattleShip &amp;lt; Ship  
end

battleship = Battleship.new  
battleship.size =&amp;gt; 2  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Composition example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class PatrolBoat  
  def initialize (size = 2)
    @size = size
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;require 'patrol_boat'

class AircraftCarrier  
  def initialize(ac_size = PatrolBoat.new)
    @size = ac_size
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Research project by Moe and Harry&lt;/p&gt;</content:encoded></item><item><title>Day 6</title><description>&lt;p&gt;Today has been a hard but really encouraging day!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I understood all the code I wrote with Sarah (always a good start) we progressed and the tests eventually came back green. I just feel for the first time things started to click, so that was a great feeling. Most likely&lt;/p&gt;</description><link>http://localhost:2368/2015/09/08/day-6/</link><guid isPermaLink="false">793b33d1-838b-45a8-870a-69a9d275af7e</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Tue, 08 Sep 2015 19:44:53 GMT</pubDate><content:encoded>&lt;p&gt;Today has been a hard but really encouraging day!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I understood all the code I wrote with Sarah (always a good start) we progressed and the tests eventually came back green. I just feel for the first time things started to click, so that was a great feeling. Most likely gone by tomorrow, but its okay.&lt;/p&gt;

&lt;p&gt;Our collaborative approach for day two of Battleships was to start with basics, the ship class, moving on to player and maybe eventually board - however we didn't actually make it past the Ship class. Our ships know if they are hit, how many times, and if they are floating or sunk. I also added tonight the different size ships, testing them individually. And then the doubles! But the ship class now is pretty big so I think thats definitely a question to ask tomorrow, which classes actually NEED what methods, but also if I am getting a bit carried away with encapsulation, water class, hit class etc!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Our research project today was on the SOLID principle: Dependency Inversion and injection. Honestly, I don't get it - so thats tonight sorted! Going to bring this up in our stand up tomorrow if I'm still not too sure.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I don’t think I really have much else to say today. Oh! Actually, it was so embarrassing, I made a real mess of my presentation this morning on the string method split. I feel like I know split pretty well now, but I had a little tech issue so I couldn't do my examples in irb, and well, it all went down hill from there! Hopefully next time it will be better.&lt;/p&gt;

&lt;p&gt;Apart from that, I am really sorry that I bailed out on climbing tonight Nikesh, Simon and co! I’ll be there next week :) &lt;/p&gt;

&lt;p&gt;Goodnight! &lt;br&gt;
Harry x&lt;/p&gt;</content:encoded></item><item><title>SOLID - Dependency Inversion Principle</title><description>&lt;p&gt;&lt;strong&gt;Research Assignment:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Describe the SOLID principle of dependency inversion, by giving an example of dependency injection. How does DI improve the reusability of code?&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Dependency Inversion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In computer programming, SOLID in an acronym for the "first five basic principles of object-orientated design", where the D stands for Dependency Inversion.&lt;/p&gt;

&lt;p&gt;Dependency&lt;/p&gt;</description><link>http://localhost:2368/2015/09/08/solid-dependency-inversion-principle/</link><guid isPermaLink="false">d2e2742d-bb49-4cac-a6ed-587dad025916</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Tue, 08 Sep 2015 10:31:58 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;Research Assignment:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Describe the SOLID principle of dependency inversion, by giving an example of dependency injection. How does DI improve the reusability of code?&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Dependency Inversion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In computer programming, SOLID in an acronym for the "first five basic principles of object-orientated design", where the D stands for Dependency Inversion.&lt;/p&gt;

&lt;p&gt;Dependency inversion is about reversing dependencies from "higher level" modules to "lower level" modules. For example a computer, the high level module, depends on the individual keys, which are the low level modules.  Here, the keyboard is depending on the details of the low level module the keys, and if any of these details change, it has a knock on effect and the high level module needs to be changed too. &lt;/p&gt;

&lt;p&gt;This is bad! High and low level modules should not depend on each other at all. So this is where abstraction comes into play. Abstraction is one of the basic programming concepts in OOP. It simplifies complex programs by creating only appropriate classes, factoring out any unnecessary details.&lt;/p&gt;

&lt;p&gt;To make sure there is no concept of high and low modules anymore, we create this abstraction interface that sits between the high and low level objects. Any interactions between these objects only take place though this interface. Therefore, we never have a situation where one object is dependant on another - they are both dependent on a common abstraction instead, which means we can change alter each object respectively and is shouldn't affect the other. &lt;/p&gt;

&lt;p&gt;As a whole this lets our project have a naturally modular design, which is good so that we can test individual modules in isolation, rather then worrying about how they work togther. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Dependency Injection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dependency injection means giving an object its instance variables, which is implementing our dependency inversion principle. &lt;/p&gt;

&lt;p&gt;Dependency injection provides the dependencies that an object needs instead of having it construct them itself. It ultimately results in less coupling between objects. Dependency is great for testing, as dependencies can be mocked or stubbed out quite easily, so it is more straight forward to run tests in isolation. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Benefits of Dependency Inversion&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Makes is easy to follow the Single Responsibly Principle (which is the S of SOLID)&lt;/li&gt;
&lt;li&gt;Simplier to manage dependencies between objects&lt;/li&gt;
&lt;li&gt;Code becomes a lot more modularised, robust and flexible&lt;/li&gt;
&lt;li&gt;A lot easier to run unit tests&lt;/li&gt;
&lt;li&gt;Makes it easier to change your code in the future&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;#a typical approach&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Board  
  def initialize
    @ship = Ship.new
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;#DI approach&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Board  
  def initialize(ship)
    @ship = ship
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;s &lt;br&gt;
Research project by Harriet Craven and Sarah K.Pedersen&lt;/p&gt;</content:encoded></item><item><title>Day 5</title><description>&lt;p&gt;Week 2!! &lt;br&gt;
Here we go! &lt;br&gt;
Battleships!&lt;/p&gt;

&lt;p&gt;This time I promise I’m actually going to keep it short because I really want to go to bed! Over the weekend the airport challenge went okay. I need to be stricter with myself about sticking to the refractor loop, because I lost&lt;/p&gt;</description><link>http://localhost:2368/2015/09/07/day-5/</link><guid isPermaLink="false">59a1f57c-e5b4-456d-b15c-5c71e4146e96</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Mon, 07 Sep 2015 22:38:02 GMT</pubDate><content:encoded>&lt;p&gt;Week 2!! &lt;br&gt;
Here we go! &lt;br&gt;
Battleships!&lt;/p&gt;

&lt;p&gt;This time I promise I’m actually going to keep it short because I really want to go to bed! Over the weekend the airport challenge went okay. I need to be stricter with myself about sticking to the refractor loop, because I lost the routine of feature and unit tests, then got a bit lost in my own code. I missed having a buddy by my side to bounce ideas off, so I was definitely looking forward to getting back in to Makers to pair program today. &lt;/p&gt;

&lt;p&gt;Me and Harry felt like we have had a productive day, although we don’t have a lot of code to show for this! The Battleships is the largest project by far up until now, although I think it is as much to do with planning, modelling and concepts as it is code, so because of this we spent quite a lot of time getting used to the user stories. But, of course we over complicated these and ended up deleting all our code before tackling it from a totally different angle after lunch. It hurt at the time, but its definitely a mature moment to say that what you actually need to do is start over!&lt;/p&gt;

&lt;p&gt;We had originally started with trying to create a grid for the game, as nested arrays, (compltely blaming Chris Pine’s civilisation world for this) but issues followed because we weren’t completely sure how to set the boundaries, and we also struggled to place the ships vertically. So we went back to basics and created 3 small classes for water, ship and board. There is ALOT of work to be done tomorrow but I’m looking forward to it because I am a lot more confident with our approach and understanding what is the madness behind our methods.&lt;/p&gt;

&lt;p&gt;Yoga was really great today (thanks Joe for dragging me away from my code- it was totally worth it) and tomorrow I have my first little presentation of any Ruby method of our choice. There are over 400 ruby methods and one by one we hope to have these nailed! I’ve chosen &lt;code&gt;split&lt;/code&gt;. So just for practise - str.split divides a string into substrings based on their delimiter, returning an array of these substrings. I’ll then do a range of examples in irb and talk though them! &lt;/p&gt;

&lt;p&gt;Keeping this short tonight, I’ll try and make up for it tomorrow after my first Makers climbing outing! &lt;br&gt;
Goodnight, &lt;br&gt;
Harry x &lt;/p&gt;</content:encoded></item><item><title>Day 4</title><description>&lt;hr&gt;

&lt;p&gt;So today, the final day of Week 1, me and my partner Lucy had a long low, follow by a the biggest high to date when we solved Post Challenge 3 of the Boris Bike challenge. I honestly don’t think I have ever been happier to see the colour&lt;/p&gt;</description><link>http://localhost:2368/2015/09/05/day-4/</link><guid isPermaLink="false">f1df38ec-19c0-400e-9458-fd7b1101cd29</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Fri, 04 Sep 2015 23:50:34 GMT</pubDate><content:encoded>&lt;hr&gt;

&lt;p&gt;So today, the final day of Week 1, me and my partner Lucy had a long low, follow by a the biggest high to date when we solved Post Challenge 3 of the Boris Bike challenge. I honestly don’t think I have ever been happier to see the colour green. I think we both shed a little tear of happiness! It came down to not concentrating enough attention to detail, as the solution was in our rspec error message all along without us realising for a good few hours. We had conflicting errors in our docking&lt;em&gt;station&lt;/em&gt;spec.rb file and the docking_station.rb file, as one fail method said “station” and the corresponding test expected “Station”. This was a massive learn curve. We have been told so much to read our error messages very carefully but this really hit home. &lt;/p&gt;

&lt;p&gt;This was also the first time I really experienced the frustration of not knowing how to solve something, or which direction to take next. This is the feeling we need to get used to, as developers spend about 80% of there time getting out of problems, only minutes later to hit the next. But we worked through it together and came out really happy with our days progress. &lt;/p&gt;

&lt;p&gt;So thats the Boris Bike challenge, and this weekends challenge is to write the software to control to flow of planes at an airport. How scary does that sound! But hopefully it will reflect a lot of the Boris bike work and I’m actually kind of looking forward to giving this my best shot and testing how much I have taken in from these last three days. Easy to say now!&lt;/p&gt;

&lt;p&gt;But we made it to our first Friday at Makers! And from 5pm the place just got giddy and was total madness. There were guns shooting these foam bullets around the place. Nikesh had his advance point shooting down from the coaches balcony, Adrian was hiding behind the whiteboards for safety. It was just crazy. And! Well, when that message went up on Slack saying beer had been delivered to the kitchen, word of mouth spread like wild fire. &lt;/p&gt;

&lt;p&gt;Me and Lucy just wanted to get on and work but there were so many objects flying around the place it was really distracting! Luckily we were just doing some research in prep for the weekends challenge on doubles, so we surrendered and went to a new pub at 9 with the seniors. They are so nice and reassured us that any doubts and nerves we are feeling at the moment is normal. It was really nice to spend some time with them. &lt;/p&gt;

&lt;p&gt;All going well I will post on Sunday saying how the Airport challenge went! If I don’t.. ah lets just hope I do!&lt;/p&gt;

&lt;p&gt;Happy weekend! &lt;br&gt;
Harry x&lt;/p&gt;</content:encoded></item><item><title>Day 3</title><description>&lt;p&gt;&lt;strong&gt;Boris Bike #2&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;My little alarm that flashes ‘10pm go to bed’ on my phone has just gone off, and I’ve literally just walked through the door - but! We were at the pub for the last hour so its okay. And the alarm thing was always going to&lt;/p&gt;</description><link>http://localhost:2368/2015/09/03/day-3/</link><guid isPermaLink="false">3d64bf31-d3b0-4b0d-966f-2af8c55395b1</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Thu, 03 Sep 2015 22:02:31 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;Boris Bike #2&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;My little alarm that flashes ‘10pm go to bed’ on my phone has just gone off, and I’ve literally just walked through the door - but! We were at the pub for the last hour so its okay. And the alarm thing was always going to be VERY optimistic. &lt;/p&gt;

&lt;p&gt;Totally has been totally different, still in a good way! Quickly adapting to same code with a new partner was something to really get your head around. We struggled a little at first on the communication front, but after the research project and some lunch (I thought I had left mine at home and then found it - never been happier) and stepping back away from the code, the afternoon was really productive. Today I feel like I learnt more about pair programming itself then coding as such but I think thats okay!&lt;/p&gt;

&lt;p&gt;I’m going to keep this one short just because I was pretty tired this morning after not finally getting to bed until 12 ish last night. So, first of all I just want to say that my note pad is starting to look particularly awesome with my whole three challenge stickers proudly on the front. Apart from enjoying this far too much, we coded, had a lunch time talk, meditated, I coloured a little, coded some more, yoga, coded and then at 8 the pub.&lt;/p&gt;

&lt;p&gt;The meditation didn't hurt any where near as yesterday, the hands were still twitching and everything, but when the second dong went I I totally jumped so must have zoned out again! Such a great feeling afterwards though, thank you Dana.&lt;/p&gt;

&lt;p&gt;What I took away from our afternoon stand up was mainly Time-boxing, so being strict with yourself on certain projects, basically sorting out of time management skills! Also excapulation (my spelling is so bad that it doesn't even recognise it - sorry everybody) but this means making sure you never expose more than you need too within in a project, using private and potentially protected methods.&lt;/p&gt;

&lt;p&gt;But The Boris Bike challenge is still ongoing and hopefully I’ll be able to take a lot of this into the airport challenge at the weekend, because right now I am pretty nervous about going about a full project without somebody to bounce ideas off, and talk through problems/ potential solutions with. But after today the basic syntax of Rspec is a lot clearer to me which is great. I think by the end of week 1 we should really feel pretty comfortable with TDD - weekly goal! &lt;/p&gt;

&lt;p&gt;There are so many things going on in and around Makers, I feel like I need to start being a bit stricter with myself about what I will and wont do, lunch time talks etc just because even though I’ll be told no day it wasted, I just feel like I didn't do as much coding today as yesterday, and there a bit of guilt lingering over right now.&lt;/p&gt;

&lt;p&gt;Before I switch off I just want to mention my byte coach for this week Samm, he is really, really amazing. SO funny, enthusiastic, encouraging, and I think he knows literally everything about everything. He’s spent the time going through everybody's personal blocks, elaborating on them so much that at one point were all studying the Blooms Taxonomy. But this education and learning philosophy is really useful to know for us as we try to cram ridiculous amounts of knowledge in our brains, but I really feel like I learn so much from him, and the nature of stand ups themselves. At the moment we are getting around the group in average 17 minutes. This should be about 5!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;So Top things from today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The pub tonight was needed an appreciated! Really fun :) &lt;/li&gt;
&lt;li&gt;Tips and tricks how to not freak out when you are pairing with who you think might be a robot&lt;/li&gt;
&lt;li&gt;Using github to check out other code as examples, through the rspec/rspec file.&lt;/li&gt;
&lt;li&gt;But probably the most important is the way I will next approach a project with a new pair partner.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OH wow ^^ this was supposed to be a short blog..but in 30 minutes! I think that is a record time for me! But that means I will definitely have lots of typo’s, and Nikesh will defiantly let me know about it within the next few minutes - because we have recently discovered he is Big Brother.&lt;/p&gt;

&lt;p&gt;Goodnight all! &lt;br&gt;
Harry x&lt;/p&gt;</content:encoded></item><item><title>Test Driven Development</title><description>&lt;blockquote&gt;
  &lt;p&gt;“Bad programmers have all the answers. Good testers have all the question”. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;TDD stands for Test Driven Development. The philosophy behind TDD is to write your tests first before writing just enough code to fulfil these tests. You then refractor your code to make it beautiful!&lt;/p&gt;

&lt;p&gt;The refractor cycle is&lt;/p&gt;</description><link>http://localhost:2368/2015/09/03/test-driven-development/</link><guid isPermaLink="false">a4aec846-99fc-4d7c-840d-59c2623f8075</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Thu, 03 Sep 2015 12:26:53 GMT</pubDate><content:encoded>&lt;blockquote&gt;
  &lt;p&gt;“Bad programmers have all the answers. Good testers have all the question”. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;TDD stands for Test Driven Development. The philosophy behind TDD is to write your tests first before writing just enough code to fulfil these tests. You then refractor your code to make it beautiful!&lt;/p&gt;

&lt;p&gt;The refractor cycle is part of TDD. This loop is repeated in the sense of writing a test, watch it fail, make it work, refractor it and repeat the whole process. In the feature test you write code you wish you had, and from the features failure message you plan your unit tests accordingly. The unit test tests the capabilities of individual objects in a program, isolated from one another. Using this approach means that every few minutes, this cycle moves your code forward a notch, providing code that - although may not be finished - it has been tested, designed, coded and is ready to go. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src="https://jorgekotickaudy.files.wordpress.com/2013/04/tdd-tdd.jpg" alt=""&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The reference to “red” indicates that the example fails because the necessary code does not exist yet, which is necessary to make the test pass. You use the red failure error messages as a guide to tell you what your code needs to include to pass.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The next step is to see all of your tests passing. This means that you will write just enough code to meet the tests' requirements. You will see a "green" message which indicates that you have succeeded in passing all of the tests.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Refactoring is changing the code without changing its behaviour. Now that the code does what you want, you use refactoring to make the design more attractive and easy to follow, also removing any duplication. After refactoring your tests still need to still have 100% coverage.&lt;/p&gt;

&lt;p&gt;Research project by Harriet Craven and Zhivko Siderov &lt;/p&gt;</content:encoded></item><item><title>Day 2</title><description>&lt;p&gt;&lt;strong&gt;Boris Bikes&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;If the next 12 weeks continue like today and yesterday, I’m going to bore you with repeatedly saying how much fun each day is. Today was so great. But just real quick, I’ve read Day 1’s blog and I have realised I didn't even mention&lt;/p&gt;</description><link>http://localhost:2368/2015/09/02/day-2/</link><guid isPermaLink="false">46423944-6cfd-41c8-aed6-a6fa527cbb3a</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Wed, 02 Sep 2015 22:11:22 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;Boris Bikes&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;If the next 12 weeks continue like today and yesterday, I’m going to bore you with repeatedly saying how much fun each day is. Today was so great. But just real quick, I’ve read Day 1’s blog and I have realised I didn't even mention my cohort once, this needs to be appended!  So, well there is 36 of us, from all sorts of backgrounds, finance and marketing, professional poker player, straight from A levels and me, ex dancer. Everybody is so nice, and today I had ‘Aaron fro Essex’ and ‘Alex from Dallas, Texas’ programming next to me and they were so funny, me and my pair ‘Harry from London’ all laughed so much and even though we were sat at those screens for about 10 hours in total, it went so quick. &lt;/p&gt;

&lt;p&gt;Today started with a stand up from Tansaku explaining our challenge for the rest of the week, which is a project that will hopefully be the infrastructure of how the Boris Bikes work around London. It was only five or so minutes long, and I came out not really knowing what was about to happen to be honest! But there was a great vibe going on and I was looking forward to getting started. The Boris Bikes repo consisted of ten little challenges that guided us through the first few steps that would supposedly, when present with &lt;em&gt;any&lt;/em&gt; software project, should be a kind of template guide for us to follow through. &lt;/p&gt;

&lt;p&gt;Later on we had out first meditation which was interesting! I think I liked it! Just it was very, very strange. I totally zoned out. Dana has told us to sit up straight, top of your head to the roof kind of thing, and then 15 minutes later when I was half conscious again,  had completed slouched over. I could feel my hands twitching loads and I felt a little ill and pretty uncomfortable when we had to concentrate on our internal breathing. Dana had told us yesterday meditation is just another skill, that would take time and practise, like anything, to get better at. Anyway, long story short, I was still totally awake will full concentration until about half 7, so I'm converted! Note to self: go everyday! &lt;/p&gt;

&lt;p&gt;Just before this we had our first table tennis game. Alex taught us how to play ‘King’, which was pretty much 7 of us running around the ping pong table like lunatics, trying not crash into each other. Everyone was pretty crap apart from Alex, oh actually Usman was definitely the worst, but there is a lot more time for practise in that department! &lt;/p&gt;

&lt;p&gt;After meditation me and my pair Harry got straight back and finished up to the Post Challenge 1. The last exercise in this was to write the whole program, that we have just spent about 8 hours on, from the start totally fresh! When we read this, there was a little temptation to skip over it to be honest! But we managed to do it in an hour, and it really surprised us both how much we had taken it. Great exercise :) &lt;/p&gt;

&lt;p&gt;We called it a night at 8pm, after 10+ cups of tea, lunch, meditation, table tennis, an afternoon cereal break, and two stand ups! Pretty happy but mostly relieved that our first day of actual coding was so much fun, and we actually got quite far. &lt;/p&gt;

&lt;p&gt;I don’t know how it is already 11 o’clock! After my nightly message on Slack to Joe perswading him to go to bed, I’m too shutting down for the night.&lt;/p&gt;

&lt;p&gt;Harry x&lt;/p&gt;</content:encoded></item><item><title>#September2015</title><description>&lt;p&gt;The First Photo! &lt;br&gt;
&lt;img src="https://files.slack.com/files-pri/T03ALA7H4-F09VB8ZMW/dsc_0251.jpg" alt=""&gt;&lt;/p&gt;</description><link>http://localhost:2368/2015/09/02/september-cohort/</link><guid isPermaLink="false">7befc811-25eb-4a5f-84c9-7f568951d419</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Wed, 02 Sep 2015 20:53:12 GMT</pubDate><content:encoded>&lt;p&gt;The First Photo! &lt;br&gt;
&lt;img src="https://files.slack.com/files-pri/T03ALA7H4-F09VB8ZMW/dsc_0251.jpg" alt=""&gt;&lt;/p&gt;</content:encoded></item><item><title>Day 1</title><description>&lt;p&gt;&lt;strong&gt;First day at Makers!!&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;After speaking to a few of my new cohort pals, I think its fair to say I wasn't the only one who had a sleepless night on our Makers eve. But today was a great balance of getting to know each other and talks from our&lt;/p&gt;</description><link>http://localhost:2368/2015/09/01/day-1/</link><guid isPermaLink="false">085ca97d-0463-43ac-8e10-0c9a19e2c0e2</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Tue, 01 Sep 2015 21:20:18 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;First day at Makers!!&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;After speaking to a few of my new cohort pals, I think its fair to say I wasn't the only one who had a sleepless night on our Makers eve. But today was a great balance of getting to know each other and talks from our coaches, so there was really no need to be so nervous. Well not for our induction day anyway.. tomorrow is a whole different story!&lt;/p&gt;

&lt;p&gt;Our first day kicked off at 8:30 in the kitchen with fresh croissants and pastries ordered in from Pret, and LOTS of cups of coffee. Tired conversation was flowing but by 9 everybody was excited and pumped ready to get going. Instead of diving straight into code, we did some bonding exercises, including a naming game and the spaghetti challenge. We learn’t a little later that the spaghetti challenge is a world famous challenge that give teams simple but really effective collaboration skills in what feels like the fastest 18 minutes of your life. Our little teams marshmallow reached the grand total height of 27cm. We were pretty chuffed with ourselves until we turned around to see a free standing spaghetti eiffel tower reaching around 60cm. Sam explained the point of this exercise, and how effective this challenge is in teaching people to develop projects in small steps, and always look for solutions continuously. In theory terms this is to put yourself in the marshmallows position and make sure you can always be stood up tall, and then that itself means you can keep growing. In tech terms this means making every iteration ready, if on qu you suddenly have to submit your code, it would still pass. Check out the marshmallow challenge &lt;a href="http://marshmallowchallenge.com/Welcome.html"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Also, quick little personal achievement! I am usually pretty terrible with names, but because of the name game, I can pretty confidently say I know the name and where each one of my peers is from..and its only the first day! This doesn't seem very impressive but theres 36 of us and some of the places I have honestly never heard of.&lt;/p&gt;

&lt;p&gt;A few other lectures included how to try be the best Knowledge Workers you possible can, and a another lecture on literally Getting Stuck. The escalation process of potential help we should exhaust (error messages, pair partners, google, other cohort peers etc) before finally asking coaches for help. I think this being cruel to be kind approach will hopefully elevate our speed of problem solving efficiency in the long run. &lt;/p&gt;

&lt;p&gt;I took little notes in most of these lectures, but only now when I am writing this post, I realised that I didn't even pick up my pencil in Dana’s (The Chief Joy Officer) talk. This is probably because I felt I was being hypnotised with her genuine happiness for 30 minutes, it was infectious! I have a feeling she is a real asset to the ‘Dream Makers’, as the coaches call themselves, and somebody who we will be going to in days when you might need a little pick me up.&lt;/p&gt;

&lt;p&gt;By half 5 we were all cheering in the pub to surviving our first day. What we are trying to do in 12 weeks is complete madness, but I feel so lucky to just be ‘a Maker’ because the bond and atmosphere they have going around the three floors is really awesome. In 2 weeks I will be a mentor, 6 weeks a senior.. that has kind of just hit home! We asked for any advice as to was to do tonight to prepare, and Spike (another coach) replied saying just sleep. So I am going to bed! Heathy body, healthy mind is so important and with the daily meditation and yoga classes put on by Dana, they really, really encourage this. I am already exhausted, which I feel a little guilty about because I didn’t really do much today! And a bit nervous about how hard tomorrow will be, but Sam was quite firm in saying not to beat ourselves up about the pace we learn at. Everybody learns differently, and everybody here is bright and smart but in different ways. In these 12 weeks we will be retraining our brains to learn how to learn all over again.. Sounds pretty terrifying if you ask me!&lt;/p&gt;

&lt;p&gt;But to ‘Trust them’ and ‘have fun - it will REALLY lighter the load' are the two things that I came away today thinking about. Oh and to also watch our posture because there are designated 'posture police' reappointment every week or so, and we’ll get probably an extra challenge or something knowing them if we are slouching!&lt;/p&gt;

&lt;p&gt;Goodnight! &lt;br&gt;
Harry x&lt;/p&gt;</content:encoded></item><item><title>Pre Course</title><description>&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Joining Makers Academy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I have had six months since being accepted to Makers to prepare mentally, physically, emotionally (pretty much every way there is!) for potentially the most challenging 12 weeks I'll ever face. Its going to be hard, every blog I have read won’t let me forget it…&lt;/p&gt;</description><link>http://localhost:2368/2015/08/30/pre-course/</link><guid isPermaLink="false">eda542fc-bfc9-420f-b08c-68d23e40ad95</guid><dc:creator>Harriet Craven</dc:creator><pubDate>Sun, 30 Aug 2015 20:41:17 GMT</pubDate><content:encoded>&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Joining Makers Academy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I have had six months since being accepted to Makers to prepare mentally, physically, emotionally (pretty much every way there is!) for potentially the most challenging 12 weeks I'll ever face. Its going to be hard, every blog I have read won’t let me forget it… but I am so excited. I am currently in the midst of the final week of the Pre-course (four weeks of compulsory remote studying) and it has flown by! Before I applied to Makers, reading Makers alumni’s blogs really were the game changer for me - they were so honest, passionate and enthusiastic about their time at Makers Academy. So here’s hoping - I’ll try to do the same!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Summary of Precourse week 1:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Four hours later, and a very large glass of Rosé, I completed week 1’s challenge. My list of ‘history’ from the command line couldn't have been any messier!&lt;/p&gt;

&lt;p&gt;Lucy, a fellow Septemberite, kept my sane when for the life of me, I couldn't figure out why my Unixoid-challenge wouldn't submit - I was in the wrong directory. Lets just say I won’t be making that hour long mistake again! &lt;/p&gt;

&lt;p&gt;Unfortunately I missed the Pre-course launch evening. Everybody looked like they were having a ball as they listened to Nikesh talk though different aspects of the Makers journey, shortly followed by a trip to the local about 10 metres down the road. &lt;/p&gt;

&lt;p&gt;It has been strongly suggested that we blog throughout the next 12 weeks as much as possible. To help us keep a clear record of everything we are learning if nothing else. I have never blogged before, and I am really pretty bad in the spelling and grammar department, so I am sorry for any typos in advance! &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Precourse Week 2:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Version control and GitHub. I didn’t realise how important GitHub was until this week. I had never heard of it before, but ultimately, it is the place where future employers will go to review our code. Github has many awesome features, including the abilities for a team push and pull each others code, allowing them to work simultaneously on the same project. Trust me, its great!&lt;/p&gt;

&lt;p&gt;Week two again could not have gone any faster. I feel like I am much more confident with forking, cloning, and it really makes me appreciate how important the Pre-course is. It continues to prepare us in small steps for the real 12 weeks, which lie in the not so far distance now. But I am sure, not matter how much we try now, it will still hit us like a tonne of bricks. &lt;/p&gt;

&lt;p&gt;I also finally got my Ghost blog up and running this week- thanks to Usmans blog! His step by step guide was welcomed with open arms to a few of us on the cohort who were really struggling. Big shout out to Usman - check out the famous blog.. &lt;a href="http://usmanj.github.io/setting-up-a-ghost-blog-on-github/"&gt;Setting up a Ghost blog on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Precourse Week 3:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Where to start!! &lt;br&gt;
I’m struggling to put into words my ups and downs this week. Quickly getting out the way the fact my laptop crashed and I lost everything on it. 20 hours in Apple, two ruby days behind and a new laptop with a full night of reinstalling later… we are good to go - take two! &lt;/p&gt;

&lt;p&gt;The week quickly got a lot better on the Friday when I went into Makers for the first time since my interview. I pair programmed with Joe, and it was great. I learnt so much from him, he was so patient, and I think we both came away from our first pair programming experience really chuffed with ourselves. After a brief discussion, we wanted to do something useful and wrote a script to produce random pairs, making sure that a person doesn’t pair with someone they had previously paired with. We tested the ping pong technique, where you swap the driver, navigator rolls every 15 minutes or so. In my ignorance exited for the first rotation, I stood up ready to physically swap seats with Joe..you're probably shaking your head at me right now! Anyway, Joe contained his laughter very kindly and explained how using our new found GitHub skills, we simply make a new repo and push and pull each others code, both working on the most recent version, own computers, own swively blue chair! The following link is Joe's post about what we got up to in more detail..  &lt;a href="http://chn-challenger.github.io/pair-programming-and-more-codewars/"&gt;Pair Programming: Harriet and Joe&lt;/a&gt; Thank you Joe.&lt;/p&gt;

&lt;p&gt;After completing version 1, and a great but slightly rushed attempt of a more efficient version 2, it was time for the seniors graduation. The beers were out and the final projects where so impressive in quality and individuality. The fact that will be us in 12 weeks is completely terrifying! In the mean time, all Makers, past, present and future overflowed the pub.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Precourse Week 4:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Final week of pre-course, where has the time gone! The more I’m learning the more I realise there is to learn, and all I want right now is more time. But I am currently sat on the train down to London, having waved bye to my parents on the platform, and now I’m having a little panic that I haven’t done enough work! Slack (the messaging app we use) felt pretty quiet this weekend, so maybe I wasn’t the only one making the most of our last few days of a social life. If any family/ friends are reading this, I am so sorry I am about to go off the radar for 3 months. I’ll see you all at Christmas!&lt;/p&gt;

&lt;p&gt;For the the rest of my final day of Pre-course I think I will try and avoid codewars, simply because it is just so addictive, and instead read up on some TDD and Rspec. I really can’t believe it’s September 1st tomorrow, I have been looking at the “Maker’s 12 weeks begin!” event in my calendar for so long, and its here… wish me luck, I really am going to need it! Quick trip to m&amp;amp;s to get the first of many packed lunches, early night and let the 12 weeks begin :D &lt;/p&gt;

&lt;p&gt;Harry x&lt;/p&gt;</content:encoded></item></channel></rss>